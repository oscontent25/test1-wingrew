name: GitHub Classroom Workflow

on: 
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'

env:
  IMG_URL_RISCV64: https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-riscv64.img.gz # 镜像url
  IMG_URL_LOONGARCH64: https://github.com/Azure-stars/testsuits-for-oskernel/releases/download/v0.1/sdcard-loongarch64.img.gz # 镜像url
  TIMEOUT: 300 # 超时时间
  SCRIPT_REPO: https://github.com/oscontent25/EvaluationScript # 脚本仓库


jobs:
  build:
    name: Autograding
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust-toolchain: [nightly-2025-01-18]
    env:
      qemu-version: 9.2.1
    outputs:
      details: ${{ steps.autograding.outputs.details }}
      points: ${{ steps.autograding.outputs.points }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          components: rust-src, llvm-tools
          targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat, loongarch64-unknown-none
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cargo-binutils
      - uses: ./.github/workflows/setup-musl
        with:
          arch: riscv64
      - uses: ./.github/workflows/setup-musl
        with:
          arch: loongarch64
      - uses: ./.github/workflows/setup-qemu
        with:
          qemu-version: ${{ env.qemu-version }}
      - name: Build python environment
        run: sudo apt-get install -y python3 python3-pip
      - name: build os.bin
        run: |
          make all
      - name: run riscv tests
        run: |
          wget $IMG_URL_RISCV64 -O sdcard-riscv64.img.gz
          gunzip sdcard-riscv64.img.gz
          qemu-system-riscv64 -machine virt -kernel kernel-rv -m 2G -nographic -smp 4 -bios default -drive file=sdcard-riscv64.img,if=none,format=raw,id=x0 \
                              -device virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0 -no-reboot -device virtio-net-device,netdev=net -netdev user,id=net \
                              -rtc base=utc \
                              -drive file=disk.img,if=none,format=raw,id=x1 -device virtio-blk-device,drive=x1,bus=virtio-mmio-bus.1 | tee riscv_output.txt
      - name: Download EvaluationScript
        run: |
          git clone ${{ env.SCRIPT_REPO }} .github/classroom
      - uses: oscontent25/os-autograding@master
        id: autograding
        with:
          outputfile: riscv_output.txt
          scriptPath: ./github/classroom/busybox-glibc
      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          AUTOGRADING_RESULTS: "${{steps.autograding.outputs.result}}"
        with:
          runners: autograding

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Test Autograding Outputs
        run: |
          echo "${{ needs.build.outputs.details }}"
          echo "here ${{ needs.build.outputs.result }}"
          
      - run: |
          mkdir autograding_logs
          cd autograding_logs
          echo -ne "${{ needs.build.outputs.details }}\nPoints: ${{ needs.build.outputs.points }}" \
            >> `date +%Y_%m_%d_%H_%M_%S`.txt
      
      - name: GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: autograding_logs
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
